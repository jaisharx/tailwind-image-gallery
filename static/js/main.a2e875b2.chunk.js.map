{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","components/Loader.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","key","uuidv4","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","Loader","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA2CeA,EAxCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0CAAf,YAAkEH,EAAMO,MACxE,4BACI,4BACI,2CACCP,EAAMQ,OAEX,4BACI,+CACCR,EAAMS,WAEX,4BACI,2CACCT,EAAMU,SAInB,yBAAKP,UAAU,aACVF,EAAKU,KAAI,SAACC,GAAD,OACN,0BACIC,IAAKC,cACLX,UAAU,8FAFd,IAOMS,SCHXG,EA9BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAQpC,OACI,yBAAKhB,UAAU,kDACX,0BAAMiB,SAPU,SAACC,GACrBA,EAAEC,iBACFN,EAAWE,IAK0Bf,UAAU,mBACvC,yBAAKA,UAAU,8DACX,2BACIoB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAClCtB,UAAU,kHACVuB,KAAK,OACLC,YAAY,yBAEhB,4BACIxB,UAAU,kIACVuB,KAAK,UAFT,cCHLE,EAfA,WACX,OACI,yBAAKzB,UAAU,oBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,kBCgCxB0B,MApCf,WAAgB,IAAD,EACiBZ,mBAAS,IAD1B,mBACJa,EADI,KACIC,EADJ,OAEuBd,oBAAS,GAFhC,mBAEJe,EAFI,KAEOC,EAFP,OAGahB,mBAAS,IAHtB,mBAGJiB,EAHI,KAGEC,EAHF,KAeX,OAVAC,qBAAU,WACNC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,sBACAK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHX,EAAUW,EAAKC,MACfV,GAAa,MAEhBW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QACjC,CAACX,IAGA,yBAAK/B,UAAU,qBACX,kBAAC,EAAD,CAAaa,WAAY,SAACE,GAAD,OAAUiB,EAAQjB,OAEzCc,GAA+B,IAAlBF,EAAOkB,QAClB,wBAAI7C,UAAU,sCAAd,mBAGH6B,EACG,kBAAC,EAAD,MAEA,yBAAK7B,UAAU,0BACV2B,EAAOnB,KAAI,SAACX,GAAD,OACR,kBAAC,EAAD,CAAWa,IAAKb,EAAMiD,GAAIjD,MAAOA,UC1BzDkD,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.a2e875b2.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ImageCard = ({ image }) => {\n    const tags = image.tags.split(',');\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n            <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-purple-500 text-xl mb-2\">Photo by {image.user}</div>\n                <ul>\n                    <li>\n                        <strong>Views: </strong>\n                        {image.views}\n                    </li>\n                    <li>\n                        <strong>Downloads: </strong>\n                        {image.downloads}\n                    </li>\n                    <li>\n                        <strong>Likes: </strong>\n                        {image.likes}\n                    </li>\n                </ul>\n            </div>\n            <div className=\"px-6 py-4\">\n                {tags.map((tag) => (\n                    <span\n                        key={uuidv4()}\n                        className=\"\n                            inline-block bg-gray-200\n                            rounded-full px-3 py-1 \n                            text-sm font-semibold text-grey-700 mr-2\"\n                    >\n                        #{tag}\n                    </span>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ImageCard;\n","import React, { useState } from 'react';\n\nconst ImageSearch = ({ searchText }) => {\n    const [text, setText] = useState('');\n    \n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        searchText(text);\n    };\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\n            <form onSubmit={onSubmitHandler} className=\"w-full max-w-sm\">\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n                    <input\n                        onChange={(e) => setText(e.target.value)}\n                        className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n                        type=\"text\"\n                        placeholder=\"Search Image Term...\"\n                    />\n                    <button\n                        className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\n                        type=\"submit\"\n                    >\n                        Search\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ImageSearch;\n","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader-container\">\n            <div className=\"load-wrap\">\n                <div className=\"load\">\n                    <div className=\"spinner\">\n                        <div className=\"bubble-1\"></div>\n                        <div className=\"bubble-2\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\nimport Loader from './components/Loader';\n\nfunction App() {\n    const [images, setImages] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [term, setTerm] = useState('');\n\n    useEffect(() => {\n        fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo`)\n            .then((res) => res.json())\n            .then((data) => {\n                setImages(data.hits);\n                setIsLoading(false);\n            })\n            .catch((err) => console.log(err));\n    }, [term]);\n\n    return (\n        <div className=\"container mx-auto\">\n            <ImageSearch searchText={(text) => setTerm(text)} />\n\n            {!isLoading && images.length === 0 && (\n                <h1 className=\"text-3xl text-center mx-auto mt-32\">No Images Found</h1>\n            )}\n\n            {isLoading ? (\n                <Loader />\n            ) : (\n                <div className=\"grid grid-cols-3 gap-4\">\n                    {images.map((image) => (\n                        <ImageCard key={image.id} image={image} />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"./assets/style.css\";\nimport \"./index.css\";\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}